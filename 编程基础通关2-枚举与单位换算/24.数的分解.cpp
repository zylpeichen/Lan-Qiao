/*
题目描述

本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。

把 2019 分解成 3 个各不相同的正整数之和，并且要求每个正整数都不包含数字 2 和 4，一共有多少种不同的分解方法？

注意交换 3 个整数的顺序被视为同一种方法，例如 1000+1001+18 和 1001+1000+18 被视为同一种。
*/

// 分析：要想不重复，那么我们可以让三个数一个比一个大，这样就不会出现重复 
#include <bits/stdc++.h>
using namespace std;

bool check(int x)   // 检测数里面是否有 2 和 4 
{
	while (x) {
		if (x % 10 == 2 || x % 10 == 4) return false;
		 x /= 10;
	}
	return true;
}

int main ()
{
	int n = 0;
	for (int i = 1; i <= 2019; i ++) {   // 因为正整数所以 第一个数 i = 1 
		int j = i + 1;  // 第二个数必须比第一个数大，所以在i 的后面，后面循环使 j 不断递增 
		while (true) {
			int k = 2019 - i - j;  // 第三个数 k 必须是  2019 - i - j
			if ( k <= j) break;  // 如果 k 比 j 小，直接退出循环 
			if (check(i) && check(j) && check(k)) n ++;  // 符合条件 n++ 
			j ++;   // 让第二个数不断递增 
		}
	}
	cout << n;
	return 0;
}
