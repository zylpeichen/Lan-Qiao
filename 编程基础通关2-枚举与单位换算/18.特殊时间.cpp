/*
问题描述

本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。

2022 年 2 月 22 日 22:20是一个很有意义的时间, 年份为 2022 , 由 3 个 2 和 1 个 0 组成, 
如果将月和日写成 4 位, 为 0222 , 也是由 3 个 2 和 1 个 0 组 成, 如果将时间中的时和分写成 4 位, 还是由 3 个 2 和 1 个 0 组成。

小蓝对这样的时间很感兴趣, 他还找到了其它类似的例子, 
比如 111 年 10 月 11 日 01:11,2202 年 2 月 22 日 22:02 等等。

请问, 总共有多少个时间是这种年份写成 4 位、月日写成 4 位、时间写成 4 位后由 3 个一种数字和 1 个另一种数字组成。
注意 1111 年 11 月 11 日 11:11 不算，因为它里面没有两种数字。
*/ 
#include <bits/stdc++.h>
using namespace std;

int main()
{
	int res = 0;
	for (int u = 0; u <= 9; u++)		// 定义四个数中不同的数 
		for (int v = 0; v<= 9; v++) {		// 定义四个数中，另外三个相同的数 
			if (u == v) continue;		// 如果四个数都相同，则下面语句不执行，直接进行下一轮循环 
			int a = 0, b = 0, c = 0;	// 用来记录年，月，日，对的次数，最后在一乘就是最后的结果 
			for (int pos = 0; pos < 4; pos++) {		// 定义四个数中不同的那个数的位置 
				int nums[4];		//定义新的数组 
				for (int i = 0; i < 4; i++) { 		// 定义 i ,来判断数组的位置 
					if (i == pos) nums[i] = u;		// 如果 i 和 pos 相等，也就是 i 是不同的那个数，就把 u 赋值给nums[i] 
					else nums[i] = v;	// 如果 i 和 pos 不相等，也就是 i 是三个相同的数，就把 v 赋值给 nums[i] 
			}
				int y = nums[0] *1000 + nums[1] *100 + nums[2] *10 + nums[3];	// 将最后的年份整合出来 
				a++; 	 
				int m = y / 100,d = y % 100;	// m 表示月份和小时， y 表示日期和分钟 
				if (m >= 1 && m <= 12 && d >= 1 && d <= 29) b++;  //这里表示月和日期 
//这个 d 日期为什么是 1-29 ，是因为出现 29 ，那么前面只能是 2229 或者 9992 ，显然两个都不可能，同理，22-30 都不可能，所以填 22-30 中的任何一个都可以 
				if (m >= 0 && m <= 23 && d >= 0 && d <= 59) c++;  // 这里表示小时和分钟 
				
			}
		res += a *b *c;		// 将结果乘起来就是总的次数  
		}
		cout << res;
		return 0;
 } 
